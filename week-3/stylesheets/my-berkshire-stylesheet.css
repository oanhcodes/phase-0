* {
    color: #000080;
    background-color: #ffffff;
}

a {
    color: #800080;
}

a:visited {
    color: #ff0000;
}

table {
  font-size:16px;
  border-top: 1px solid black;
  border-bottom: 1px solid black;
  display: block;
 }

td {
  vertical-align: top;
}

span {
  font-size:12px;
}

.newline {
  display: block;
}

header {
  font-weight: bold;
  text-align: center; 
}

p > span {
  font-size: 14px;
  display: block;
}

.font {
  font-size: 18px;
}

p span span {
   font-size: 40px;
}

aside {
  text-align: center;
}

aside p span {
  display: block;
  font-size:10px;
}

footer {
  font-size: 12px;
}

#border {
  border-top: 1px solid black;
  border-bottom: 1px solid black;
  padding-top: 15px;
  padding-bottom: 15px;
}

#big-font {
  font-size: 16px;
}

#small-font {
  font-size: 10px;
}

footer p span {
  font-weight: bold;
  display: inline;
  font-size: 10px;
}

/* 
What is important to know when linking an external file (like a stylesheet) to an HTML file?
There are three attributes you must include when linking an external html file: type, rel, and href. To link to a CSS stylesheet, the type attribute is always equal to “text/css”. The real attribute is always equal to  “stylesheet”. The href attribute is always equal to “name-of-stylesheet.css”.

What tricks did you use to help you with positioning? How hard was it to get the site as you wanted it?
We used the display property a couple of times to help with the positioning. It was not difficult to get the site the way we wanted, but it definitely took some trial an error! I learned there are many ways to get the site to look a certain way. The display property helped us create a site that should be formatted the same on different browsers.

What CSS did you use to modify the element style (like size, color, etc.)
We used size, color, weight, align, border, padding, and display.

Did you modify the HTML to include classes or ids? If so, which did you choose and why? If you didn't, how would you know which one to add to your HTML?
Yes, chose to use both classes and ids. We used classes whenever we had multiple elements we wanted to style in the same way. For example, we created a class called “newline” to add line breaks between links and link descriptions. We chose to use ids whenever we wanted only one element to be styled in a certain way. We used “big-font” and “small-font” ids to create two different styles for text in the footer.

When you compared your site to the actual code base, which do you think had cleaner code that followed best practices and why?
Having a separate stylesheet is definitely the way to go. The code is much easier to read and there is not unnecessary repetition in the html.